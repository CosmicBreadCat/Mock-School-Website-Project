{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming things\\\\Silicon Mind Project\\\\client\\\\src\\\\components\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport { Box, Button, FormControl, FormLabel, Input, VStack } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [userID, setUserID] = useState();\n  const [password, setPassword] = useState();\n  const [resData, setResData] = useState();\n  const handleClick = () => {\n    fetch(\"/api/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userID: userID,\n        password: password\n      })\n    }).then(response => response.json().then(data => setResData(data)));\n  };\n  function loginForm() {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      margin: \"20\",\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        children: /*#__PURE__*/_jsxDEV(VStack, {\n          spacing: \"5\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            width: \"50%\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"User ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              onChange: e => setUserID(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            width: \"50%\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              onClick: handleClick,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this);\n  }\n  return {\n    loginForm\n  };\n}\n_s(LoginPage, \"rb74gYoTAYQCd5pnbkNlWfXRBSU=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["Box","Button","FormControl","FormLabel","Input","VStack","useState","jsxDEV","_jsxDEV","LoginPage","_s","userID","setUserID","password","setPassword","resData","setResData","handleClick","fetch","method","headers","body","JSON","stringify","then","response","json","data","loginForm","margin","children","spacing","width","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["D:/Programming things/Silicon Mind Project/client/src/components/LoginPage.js"],"sourcesContent":["import {\r\n\tBox,\r\n\tButton,\r\n\tFormControl,\r\n\tFormLabel,\r\n\tInput,\r\n\tVStack,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\n\r\nfunction LoginPage() {\r\n\tconst [userID, setUserID] = useState();\r\n\tconst [password, setPassword] = useState();\r\n\tconst [resData, setResData] = useState();\r\n\r\n\tconst handleClick = () => {\r\n\t\tfetch(\"/api/login\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\t\tbody: JSON.stringify({ userID: userID, password: password }),\r\n\t\t}).then((response) => response.json().then((data) => setResData(data)));\r\n\t};\r\n\r\n\tfunction loginForm() {\r\n\t\treturn (\r\n\t\t\t<Box margin=\"20\">\r\n\t\t\t\t<FormControl>\r\n\t\t\t\t\t<VStack spacing=\"5\">\r\n\t\t\t\t\t\t<Box width=\"50%\">\r\n\t\t\t\t\t\t\t<FormLabel>User ID</FormLabel>\r\n\t\t\t\t\t\t\t<Input type=\"text\" onChange={(e) => setUserID(e.target.value)} />\r\n\t\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t\t<Box width=\"50%\">\r\n\t\t\t\t\t\t\t<FormLabel>Password</FormLabel>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t<Button type=\"submit\" onClick={handleClick}>\r\n\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</VStack>\r\n\t\t\t\t</FormControl>\r\n\t\t\t</Box>\r\n\t\t);\r\n\t}\r\n\r\n\treturn { loginForm };\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA,SACCA,GAAG,EACHC,MAAM,EACNC,WAAW,EACXC,SAAS,EACTC,KAAK,EACLC,MAAM,QACA,kBAAkB;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,CAAC;EACtC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAC1C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAExC,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACzBC,KAAK,CAAC,YAAY,EAAE;MACnBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEZ,MAAM,EAAEA,MAAM;QAAEE,QAAQ,EAAEA;MAAS,CAAC;IAC5D,CAAC,CAAC,CAACW,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAAEG,IAAI,IAAKX,UAAU,CAACW,IAAI,CAAC,CAAC,CAAC;EACxE,CAAC;EAED,SAASC,SAASA,CAAA,EAAG;IACpB,oBACCpB,OAAA,CAACR,GAAG;MAAC6B,MAAM,EAAC,IAAI;MAAAC,QAAA,eACftB,OAAA,CAACN,WAAW;QAAA4B,QAAA,eACXtB,OAAA,CAACH,MAAM;UAAC0B,OAAO,EAAC,GAAG;UAAAD,QAAA,gBAClBtB,OAAA,CAACR,GAAG;YAACgC,KAAK,EAAC,KAAK;YAAAF,QAAA,gBACftB,OAAA,CAACL,SAAS;cAAA2B,QAAA,EAAC;YAAO;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAC9B5B,OAAA,CAACJ,KAAK;cAACiC,IAAI,EAAC,MAAM;cAACC,QAAQ,EAAGC,CAAC,IAAK3B,SAAS,CAAC2B,CAAC,CAACC,MAAM,CAACC,KAAK;YAAE;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7D,CAAC,eAEN5B,OAAA,CAACR,GAAG;YAACgC,KAAK,EAAC,KAAK;YAAAF,QAAA,gBACftB,OAAA,CAACL,SAAS;cAAA2B,QAAA,EAAC;YAAQ;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAC/B5B,OAAA,CAACJ,KAAK;cACLiC,IAAI,EAAC,UAAU;cACfC,QAAQ,EAAGC,CAAC,IAAKzB,WAAW,CAACyB,CAAC,CAACC,MAAM,CAACC,KAAK;YAAE;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACN5B,OAAA,CAACR,GAAG;YAAA8B,QAAA,eACHtB,OAAA,CAACP,MAAM;cAACoC,IAAI,EAAC,QAAQ;cAACK,OAAO,EAAEzB,WAAY;cAAAa,QAAA,EAAC;YAE5C;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAER;EAEA,OAAO;IAAER;EAAU,CAAC;AACrB;AAAClB,EAAA,CA1CQD,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AA4ClB,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}