[{"D:\\Programming things\\Silicon Mind Project\\client\\src\\index.js":"1","D:\\Programming things\\Silicon Mind Project\\client\\src\\reportWebVitals.js":"2","D:\\Programming things\\Silicon Mind Project\\client\\src\\App.js":"3","D:\\Programming things\\Silicon Mind Project\\client\\src\\components\\NavBar.js":"4","D:\\Programming things\\Silicon Mind Project\\client\\src\\components\\CoursesPage.js":"5","D:\\Programming things\\Silicon Mind Project\\client\\src\\components\\HomePage.js":"6","D:\\Programming things\\Silicon Mind Project\\client\\src\\components\\AboutPage.js":"7","D:\\Programming things\\Silicon Mind Project\\client\\src\\components\\LoginPage.js":"8","D:\\Programming things\\Silicon Mind Project\\client\\src\\components\\AccountsPage.js":"9","D:\\Programming things\\Silicon Mind Project\\client\\src\\components\\AccountForm.js":"10","D:\\Programming things\\Silicon Mind Project\\client\\src\\components\\CourseForm.js":"11"},{"size":644,"mtime":1685794863719,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1685264367396,"results":"14","hashOfConfig":"13"},{"size":214,"mtime":1688399933253,"results":"15","hashOfConfig":"13"},{"size":1025,"mtime":1690284883771,"results":"16","hashOfConfig":"13"},{"size":4111,"mtime":1691394442985,"results":"17","hashOfConfig":"13"},{"size":162,"mtime":1688400052433,"results":"18","hashOfConfig":"13"},{"size":189,"mtime":1685795061195,"results":"19","hashOfConfig":"13"},{"size":1992,"mtime":1691257260314,"results":"20","hashOfConfig":"13"},{"size":2915,"mtime":1691408258448,"results":"21","hashOfConfig":"13"},{"size":776,"mtime":1691258319867,"results":"22","hashOfConfig":"13"},{"size":1638,"mtime":1691352656112,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rle78o",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Programming things\\Silicon Mind Project\\client\\src\\index.js",[],[],"D:\\Programming things\\Silicon Mind Project\\client\\src\\reportWebVitals.js",[],[],"D:\\Programming things\\Silicon Mind Project\\client\\src\\App.js",[],[],"D:\\Programming things\\Silicon Mind Project\\client\\src\\components\\NavBar.js",[],[],"D:\\Programming things\\Silicon Mind Project\\client\\src\\components\\CoursesPage.js",["59"],[],"import {\r\n\tBox,\r\n\tCard,\r\n\tCardHeader,\r\n\tCardBody,\r\n\tText,\r\n\tVStack,\r\n\tInput,\r\n\tCenter,\r\n\tCardFooter,\r\n\tButton,\r\n\tModal,\r\n\tModalOverlay,\r\n\tModalContent,\r\n\tModalHeader,\r\n\tModalFooter,\r\n\tModalBody,\r\n\tModalCloseButton,\r\n\tuseDisclosure,\r\n\tAlertDialog,\r\n\tAlertDialogContent,\r\n\tAlertDialogOverlay,\r\n\tAlertDialogHeader,\r\n\tAlertDialogBody,\r\n\tAlertDialogFooter,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport CourseForm from \"./CourseForm\";\r\n\r\nfunction CoursesPage(props) {\r\n\tconst [courseData, setCourseData] = useState();\r\n\tconst [accountData, setAccountData] = useState({ data: [] });\r\n\tconst [searchField, setSearchField] = useState(\"\");\r\n\tconst { isModalOpen, onModalOpen, onModalClose } = useDisclosure();\r\n\tconst { isAlertOpen, onAlertOpen, onAlertClose } = useDisclosure();\r\n\tconst cancelRef = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.resData.found) {\r\n\t\t\tfetch(\"/api/courses\")\r\n\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tsetCourseData(data);\r\n\t\t\t\t});\r\n\t\t}\r\n\t}, [props.resData.found]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.resData.found) {\r\n\t\t\tfetch(\"/api/accounts\")\r\n\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tsetAccountData(data);\r\n\t\t\t\t});\r\n\t\t}\r\n\t}, [props.resData.found]);\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetSearchField(e.target.value);\r\n\t};\r\n\r\n\tconst handleClick = (e) => {\r\n\t\tswitch (props.resData.type) {\r\n\t\t\tcase \"student\":\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"admin\":\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"teacher\":\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Center margin=\"10px\">\r\n\t\t\t\t<VStack marginTop=\"10\" width=\"40%\" spacing=\"5\">\r\n\t\t\t\t\t{props.resData.type === \"teacher\" ? (\r\n\t\t\t\t\t\t<Button onClick={onModalOpen}>Create New Course</Button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<p></p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype=\"search\"\r\n\t\t\t\t\t\tplaceholder=\"Search Courses\"\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{\"list of courses\"}\r\n\t\t\t\t\t<Box style={{ overflowY: \"scroll\" }} width=\"100%\" height=\"500\">\r\n\t\t\t\t\t\t{typeof courseData == \"undefined\" ? (\r\n\t\t\t\t\t\t\t<Center>\r\n\t\t\t\t\t\t\t\t<p>Loading....</p>\r\n\t\t\t\t\t\t\t</Center>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\tcourseData.data\r\n\t\t\t\t\t\t\t\t.filter((course) => {\r\n\t\t\t\t\t\t\t\t\treturn course.name\r\n\t\t\t\t\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t\t\t\t\t.includes(searchField.toLowerCase());\r\n\t\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\t\t.map((course) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Card border=\"2px\" borderColor=\"black\" marginBottom=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<CardHeader borderBottom=\"2px\" borderColor=\"black\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Text>{course.name}</Text>\r\n\t\t\t\t\t\t\t\t\t\t\t</CardHeader>\r\n\t\t\t\t\t\t\t\t\t\t\t<CardBody borderBottom=\"2px\" borderColor=\"black\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Text>{course.desc}</Text>\r\n\t\t\t\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t\t\t\t\t<CardFooter>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button onClick={handleClick}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{props.resData.type === \"student\" ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>Enroll</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>Edit</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</CardFooter>\r\n\t\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</VStack>\r\n\t\t\t</Center>\r\n\r\n\t\t\t<Modal isOpen={isModalOpen} onClose={onModalClose}>\r\n\t\t\t\t<ModalOverlay />\r\n\t\t\t\t<ModalContent>\r\n\t\t\t\t\t<ModalHeader>Account Creation Form</ModalHeader>\r\n\t\t\t\t\t<ModalCloseButton />\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t\t<CourseForm accData={accountData.data} />\r\n\t\t\t\t\t</ModalBody>\r\n\r\n\t\t\t\t\t<ModalFooter></ModalFooter>\r\n\t\t\t\t</ModalContent>\r\n\t\t\t</Modal>\r\n\r\n\t\t\t<AlertDialog\r\n\t\t\t\tisOpen={isAlertOpen}\r\n\t\t\t\tleastDestructiveRef={cancelRef}\r\n\t\t\t\tonClose={onAlertClose}\r\n\t\t\t>\r\n\t\t\t\t<AlertDialogOverlay>\r\n\t\t\t\t\t<AlertDialogContent>\r\n\t\t\t\t\t\t<AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n\t\t\t\t\t\t\tEnroll\r\n\t\t\t\t\t\t</AlertDialogHeader>\r\n\r\n\t\t\t\t\t\t<AlertDialogBody>\r\n\t\t\t\t\t\t\tAre you sure? You can't undo this action afterwards.\r\n\t\t\t\t\t\t</AlertDialogBody>\r\n\r\n\t\t\t\t\t\t<AlertDialogFooter>\r\n\t\t\t\t\t\t\t<Button ref={cancelRef} onClick={onAlertClose}>\r\n\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button colorScheme=\"red\" onClick={onAlertClose} ml={3}>\r\n\t\t\t\t\t\t\t\tEnroll\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</AlertDialogFooter>\r\n\t\t\t\t\t</AlertDialogContent>\r\n\t\t\t\t</AlertDialogOverlay>\r\n\t\t\t</AlertDialog>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default CoursesPage;\r\n",[],"D:\\Programming things\\Silicon Mind Project\\client\\src\\components\\HomePage.js",[],[],"D:\\Programming things\\Silicon Mind Project\\client\\src\\components\\AboutPage.js",[],[],"D:\\Programming things\\Silicon Mind Project\\client\\src\\components\\LoginPage.js",[],[],"D:\\Programming things\\Silicon Mind Project\\client\\src\\components\\AccountsPage.js",[],[],"D:\\Programming things\\Silicon Mind Project\\client\\src\\components\\AccountForm.js",[],[],"D:\\Programming things\\Silicon Mind Project\\client\\src\\components\\CourseForm.js",["60","61","62"],[],{"ruleId":"63","severity":1,"message":"64","line":35,"column":23,"nodeType":"65","messageId":"66","endLine":35,"endColumn":34},{"ruleId":"63","severity":1,"message":"67","line":18,"column":9,"nodeType":"65","messageId":"66","endLine":18,"endColumn":13},{"ruleId":"63","severity":1,"message":"68","line":19,"column":9,"nodeType":"65","messageId":"66","endLine":19,"endColumn":13},{"ruleId":"63","severity":1,"message":"69","line":20,"column":9,"nodeType":"65","messageId":"66","endLine":20,"endColumn":17},"no-unused-vars","'onAlertOpen' is assigned a value but never used.","Identifier","unusedVar","'name' is assigned a value but never used.","'desc' is assigned a value but never used.","'teachers' is assigned a value but never used."]